/**
 * Api Documentation
 * Api Documentation
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import View from './View';

/**
* The ModelAndView model module.
* @module model/ModelAndView
* @version 1.0
*/
export default class ModelAndView {
    /**
    * Constructs a new <code>ModelAndView</code>.
    * @alias module:model/ModelAndView
    * @class
    */

    constructor() {
        
        
        
    }

    /**
    * Constructs a <code>ModelAndView</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/ModelAndView} obj Optional instance to populate.
    * @return {module:model/ModelAndView} The populated <code>ModelAndView</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ModelAndView();
                        
            
            if (data.hasOwnProperty('empty')) {
                obj['empty'] = ApiClient.convertToType(data['empty'], 'Boolean');
            }
            if (data.hasOwnProperty('model')) {
                obj['model'] = ApiClient.convertToType(data['model'], Object);
            }
            if (data.hasOwnProperty('modelMap')) {
                obj['modelMap'] = ApiClient.convertToType(data['modelMap'], {'String': Object});
            }
            if (data.hasOwnProperty('reference')) {
                obj['reference'] = ApiClient.convertToType(data['reference'], 'Boolean');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('view')) {
                obj['view'] = View.constructFromObject(data['view']);
            }
            if (data.hasOwnProperty('viewName')) {
                obj['viewName'] = ApiClient.convertToType(data['viewName'], 'String');
            }
        }
        return obj;
    }

    /**
    * @member {Boolean} empty
    */
    'empty' = undefined;
    /**
    * @member {Object} model
    */
    'model' = undefined;
    /**
    * @member {Object.<String, Object>} modelMap
    */
    'modelMap' = undefined;
    /**
    * @member {Boolean} reference
    */
    'reference' = undefined;
    /**
    * @member {module:model/ModelAndView.StatusEnum} status
    */
    'status' = undefined;
    /**
    * @member {module:model/View} view
    */
    'view' = undefined;
    /**
    * @member {String} viewName
    */
    'viewName' = undefined;



    /**
    * Allowed values for the <code>status</code> property.
    * @enum {String}
    * @readonly
    */
    static StatusEnum = {
        /**
         * value: "ACCEPTED"
         * @const
         */
        "ACCEPTED": "ACCEPTED",
        /**
         * value: "ALREADY_REPORTED"
         * @const
         */
        "ALREADY_REPORTED": "ALREADY_REPORTED",
        /**
         * value: "BAD_GATEWAY"
         * @const
         */
        "BAD_GATEWAY": "BAD_GATEWAY",
        /**
         * value: "BAD_REQUEST"
         * @const
         */
        "BAD_REQUEST": "BAD_REQUEST",
        /**
         * value: "BANDWIDTH_LIMIT_EXCEEDED"
         * @const
         */
        "BANDWIDTH_LIMIT_EXCEEDED": "BANDWIDTH_LIMIT_EXCEEDED",
        /**
         * value: "CHECKPOINT"
         * @const
         */
        "CHECKPOINT": "CHECKPOINT",
        /**
         * value: "CONFLICT"
         * @const
         */
        "CONFLICT": "CONFLICT",
        /**
         * value: "CONTINUE"
         * @const
         */
        "CONTINUE": "CONTINUE",
        /**
         * value: "CREATED"
         * @const
         */
        "CREATED": "CREATED",
        /**
         * value: "DESTINATION_LOCKED"
         * @const
         */
        "DESTINATION_LOCKED": "DESTINATION_LOCKED",
        /**
         * value: "EXPECTATION_FAILED"
         * @const
         */
        "EXPECTATION_FAILED": "EXPECTATION_FAILED",
        /**
         * value: "FAILED_DEPENDENCY"
         * @const
         */
        "FAILED_DEPENDENCY": "FAILED_DEPENDENCY",
        /**
         * value: "FORBIDDEN"
         * @const
         */
        "FORBIDDEN": "FORBIDDEN",
        /**
         * value: "FOUND"
         * @const
         */
        "FOUND": "FOUND",
        /**
         * value: "GATEWAY_TIMEOUT"
         * @const
         */
        "GATEWAY_TIMEOUT": "GATEWAY_TIMEOUT",
        /**
         * value: "GONE"
         * @const
         */
        "GONE": "GONE",
        /**
         * value: "HTTP_VERSION_NOT_SUPPORTED"
         * @const
         */
        "HTTP_VERSION_NOT_SUPPORTED": "HTTP_VERSION_NOT_SUPPORTED",
        /**
         * value: "IM_USED"
         * @const
         */
        "IM_USED": "IM_USED",
        /**
         * value: "INSUFFICIENT_SPACE_ON_RESOURCE"
         * @const
         */
        "INSUFFICIENT_SPACE_ON_RESOURCE": "INSUFFICIENT_SPACE_ON_RESOURCE",
        /**
         * value: "INSUFFICIENT_STORAGE"
         * @const
         */
        "INSUFFICIENT_STORAGE": "INSUFFICIENT_STORAGE",
        /**
         * value: "INTERNAL_SERVER_ERROR"
         * @const
         */
        "INTERNAL_SERVER_ERROR": "INTERNAL_SERVER_ERROR",
        /**
         * value: "I_AM_A_TEAPOT"
         * @const
         */
        "I_AM_A_TEAPOT": "I_AM_A_TEAPOT",
        /**
         * value: "LENGTH_REQUIRED"
         * @const
         */
        "LENGTH_REQUIRED": "LENGTH_REQUIRED",
        /**
         * value: "LOCKED"
         * @const
         */
        "LOCKED": "LOCKED",
        /**
         * value: "LOOP_DETECTED"
         * @const
         */
        "LOOP_DETECTED": "LOOP_DETECTED",
        /**
         * value: "METHOD_FAILURE"
         * @const
         */
        "METHOD_FAILURE": "METHOD_FAILURE",
        /**
         * value: "METHOD_NOT_ALLOWED"
         * @const
         */
        "METHOD_NOT_ALLOWED": "METHOD_NOT_ALLOWED",
        /**
         * value: "MOVED_PERMANENTLY"
         * @const
         */
        "MOVED_PERMANENTLY": "MOVED_PERMANENTLY",
        /**
         * value: "MOVED_TEMPORARILY"
         * @const
         */
        "MOVED_TEMPORARILY": "MOVED_TEMPORARILY",
        /**
         * value: "MULTIPLE_CHOICES"
         * @const
         */
        "MULTIPLE_CHOICES": "MULTIPLE_CHOICES",
        /**
         * value: "MULTI_STATUS"
         * @const
         */
        "MULTI_STATUS": "MULTI_STATUS",
        /**
         * value: "NETWORK_AUTHENTICATION_REQUIRED"
         * @const
         */
        "NETWORK_AUTHENTICATION_REQUIRED": "NETWORK_AUTHENTICATION_REQUIRED",
        /**
         * value: "NON_AUTHORITATIVE_INFORMATION"
         * @const
         */
        "NON_AUTHORITATIVE_INFORMATION": "NON_AUTHORITATIVE_INFORMATION",
        /**
         * value: "NOT_ACCEPTABLE"
         * @const
         */
        "NOT_ACCEPTABLE": "NOT_ACCEPTABLE",
        /**
         * value: "NOT_EXTENDED"
         * @const
         */
        "NOT_EXTENDED": "NOT_EXTENDED",
        /**
         * value: "NOT_FOUND"
         * @const
         */
        "NOT_FOUND": "NOT_FOUND",
        /**
         * value: "NOT_IMPLEMENTED"
         * @const
         */
        "NOT_IMPLEMENTED": "NOT_IMPLEMENTED",
        /**
         * value: "NOT_MODIFIED"
         * @const
         */
        "NOT_MODIFIED": "NOT_MODIFIED",
        /**
         * value: "NO_CONTENT"
         * @const
         */
        "NO_CONTENT": "NO_CONTENT",
        /**
         * value: "OK"
         * @const
         */
        "OK": "OK",
        /**
         * value: "PARTIAL_CONTENT"
         * @const
         */
        "PARTIAL_CONTENT": "PARTIAL_CONTENT",
        /**
         * value: "PAYLOAD_TOO_LARGE"
         * @const
         */
        "PAYLOAD_TOO_LARGE": "PAYLOAD_TOO_LARGE",
        /**
         * value: "PAYMENT_REQUIRED"
         * @const
         */
        "PAYMENT_REQUIRED": "PAYMENT_REQUIRED",
        /**
         * value: "PERMANENT_REDIRECT"
         * @const
         */
        "PERMANENT_REDIRECT": "PERMANENT_REDIRECT",
        /**
         * value: "PRECONDITION_FAILED"
         * @const
         */
        "PRECONDITION_FAILED": "PRECONDITION_FAILED",
        /**
         * value: "PRECONDITION_REQUIRED"
         * @const
         */
        "PRECONDITION_REQUIRED": "PRECONDITION_REQUIRED",
        /**
         * value: "PROCESSING"
         * @const
         */
        "PROCESSING": "PROCESSING",
        /**
         * value: "PROXY_AUTHENTICATION_REQUIRED"
         * @const
         */
        "PROXY_AUTHENTICATION_REQUIRED": "PROXY_AUTHENTICATION_REQUIRED",
        /**
         * value: "REQUESTED_RANGE_NOT_SATISFIABLE"
         * @const
         */
        "REQUESTED_RANGE_NOT_SATISFIABLE": "REQUESTED_RANGE_NOT_SATISFIABLE",
        /**
         * value: "REQUEST_ENTITY_TOO_LARGE"
         * @const
         */
        "REQUEST_ENTITY_TOO_LARGE": "REQUEST_ENTITY_TOO_LARGE",
        /**
         * value: "REQUEST_HEADER_FIELDS_TOO_LARGE"
         * @const
         */
        "REQUEST_HEADER_FIELDS_TOO_LARGE": "REQUEST_HEADER_FIELDS_TOO_LARGE",
        /**
         * value: "REQUEST_TIMEOUT"
         * @const
         */
        "REQUEST_TIMEOUT": "REQUEST_TIMEOUT",
        /**
         * value: "REQUEST_URI_TOO_LONG"
         * @const
         */
        "REQUEST_URI_TOO_LONG": "REQUEST_URI_TOO_LONG",
        /**
         * value: "RESET_CONTENT"
         * @const
         */
        "RESET_CONTENT": "RESET_CONTENT",
        /**
         * value: "SEE_OTHER"
         * @const
         */
        "SEE_OTHER": "SEE_OTHER",
        /**
         * value: "SERVICE_UNAVAILABLE"
         * @const
         */
        "SERVICE_UNAVAILABLE": "SERVICE_UNAVAILABLE",
        /**
         * value: "SWITCHING_PROTOCOLS"
         * @const
         */
        "SWITCHING_PROTOCOLS": "SWITCHING_PROTOCOLS",
        /**
         * value: "TEMPORARY_REDIRECT"
         * @const
         */
        "TEMPORARY_REDIRECT": "TEMPORARY_REDIRECT",
        /**
         * value: "TOO_EARLY"
         * @const
         */
        "TOO_EARLY": "TOO_EARLY",
        /**
         * value: "TOO_MANY_REQUESTS"
         * @const
         */
        "TOO_MANY_REQUESTS": "TOO_MANY_REQUESTS",
        /**
         * value: "UNAUTHORIZED"
         * @const
         */
        "UNAUTHORIZED": "UNAUTHORIZED",
        /**
         * value: "UNAVAILABLE_FOR_LEGAL_REASONS"
         * @const
         */
        "UNAVAILABLE_FOR_LEGAL_REASONS": "UNAVAILABLE_FOR_LEGAL_REASONS",
        /**
         * value: "UNPROCESSABLE_ENTITY"
         * @const
         */
        "UNPROCESSABLE_ENTITY": "UNPROCESSABLE_ENTITY",
        /**
         * value: "UNSUPPORTED_MEDIA_TYPE"
         * @const
         */
        "UNSUPPORTED_MEDIA_TYPE": "UNSUPPORTED_MEDIA_TYPE",
        /**
         * value: "UPGRADE_REQUIRED"
         * @const
         */
        "UPGRADE_REQUIRED": "UPGRADE_REQUIRED",
        /**
         * value: "URI_TOO_LONG"
         * @const
         */
        "URI_TOO_LONG": "URI_TOO_LONG",
        /**
         * value: "USE_PROXY"
         * @const
         */
        "USE_PROXY": "USE_PROXY",
        /**
         * value: "VARIANT_ALSO_NEGOTIATES"
         * @const
         */
        "VARIANT_ALSO_NEGOTIATES": "VARIANT_ALSO_NEGOTIATES"    };

}
