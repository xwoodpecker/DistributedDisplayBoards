/* eslint-disable */
/**
 * Api Documentation
 * Api Documentation
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from './ApiClient';
import Board from './model/Board';
import Group from './model/Group';
import ModelAndView from './model/ModelAndView';
import ResponseEntity from './model/ResponseEntity';
import Role from './model/Role';
import User from './model/User';
import View from './model/View';
import BasicErrorControllerApi from './api/BasicErrorControllerApi';
import BoardsApi from './api/BoardsApi';
import GroupsApi from './api/GroupsApi';
import UsersApi from './api/UsersApi';

/**
* Api_Documentation.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var ApiDocumentation = require('index'); // See note below*.
* var xxxSvc = new ApiDocumentation.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new ApiDocumentation.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new ApiDocumentation.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new ApiDocumentation.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Board model constructor.
     * @property {module:model/Board}
     */
    Board,

    /**
     * The Group model constructor.
     * @property {module:model/Group}
     */
    Group,

    /**
     * The ModelAndView model constructor.
     * @property {module:model/ModelAndView}
     */
    ModelAndView,

    /**
     * The ResponseEntity model constructor.
     * @property {module:model/ResponseEntity}
     */
    ResponseEntity,

    /**
     * The Role model constructor.
     * @property {module:model/Role}
     */
    Role,

    /**
     * The User model constructor.
     * @property {module:model/User}
     */
    User,

    /**
     * The View model constructor.
     * @property {module:model/View}
     */
    View,

    /**
    * The BasicErrorControllerApi service constructor.
    * @property {module:api/BasicErrorControllerApi}
    */
    BasicErrorControllerApi,

    /**
    * The BoardsApi service constructor.
    * @property {module:api/BoardsApi}
    */
    BoardsApi,

    /**
    * The GroupsApi service constructor.
    * @property {module:api/GroupsApi}
    */
    GroupsApi,

    /**
    * The UsersApi service constructor.
    * @property {module:api/UsersApi}
    */
    UsersApi
};
